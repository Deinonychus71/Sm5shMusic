using AutoMapper;
using System.IO;

namespace Sm5sh.Mods.Music.Models.AutoMapper
{
    public class MappingAdvancedConfig : Profile
    {
        public MappingAdvancedConfig()
        {
             CreateMap<AudioCuePoints, MusicMods.AdvancedMusicModModels.BgmPropertyEntryConfig>()
                .ForMember(i => i.LoopEndMs, me => me.MapFrom(p => p.LoopEndMs))
                .ForMember(i => i.LoopEndSample, me => me.MapFrom(p => p.LoopEndSample))
                .ForMember(i => i.LoopStartMs, me => me.MapFrom(p => p.LoopStartMs))
                .ForMember(i => i.LoopStartSample, me => me.MapFrom(p => p.LoopStartSample))
                .ForMember(i => i.NameId, me => me.Ignore())
                .ForMember(i => i.TotalSamples, me => me.MapFrom(p => p.TotalSamples))
                .ForMember(i => i.TotalTimeMs, me => me.MapFrom(p => p.TotalTimeMs));
            CreateMap<MusicMods.AdvancedMusicModModels.BgmPropertyEntryConfig, AudioCuePoints>()
                .ForMember(i => i.LoopEndMs, me => me.MapFrom(p => p.LoopEndMs))
                .ForMember(i => i.LoopEndSample, me => me.MapFrom(p => p.LoopEndSample))
                .ForMember(i => i.LoopStartMs, me => me.MapFrom(p => p.LoopStartMs))
                .ForMember(i => i.LoopStartSample, me => me.MapFrom(p => p.LoopStartSample))
                .ForMember(i => i.Frequency, me => me.Ignore())
                .ForMember(i => i.TotalSamples, me => me.MapFrom(p => p.TotalSamples))
                .ForMember(i => i.TotalTimeMs, me => me.MapFrom(p => p.TotalTimeMs));

            CreateMap<GameTitleEntry, MusicMods.AdvancedMusicModModels.GameConfig>()
                .ForMember(i => i.Bgms, me => me.Ignore())
                .ForMember(i => i.NameId, me => me.MapFrom(p => p.NameId))
                .ForMember(i => i.Release, me => me.MapFrom(p => p.Release))
                .ForMember(i => i.Title, me => me.MapFrom(p => p.MSBTTitle))
                .ForMember(i => i.UiGameTitleId, me => me.MapFrom(p => p.UiGameTitleId))
                .ForMember(i => i.UiSeriesId, me => me.MapFrom(p => p.UiSeriesId))
                .ForMember(i => i.Unk1, me => me.MapFrom(p => p.Unk1));
            CreateMap<MusicMods.AdvancedMusicModModels.GameConfig, GameTitleEntry>()
                .ForMember(i => i.MSBTTitleKey, me => me.Ignore())
                .ForMember(i => i.NameId, me => me.MapFrom(p => p.NameId))
                .ForMember(i => i.Release, me => me.MapFrom(p => p.Release))
                .ForMember(i => i.MSBTTitle, me => me.MapFrom(p => p.Title))
                .ForMember(i => i.UiGameTitleId, me => me.MapFrom(p => p.UiGameTitleId))
                .ForMember(i => i.UiSeriesId, me => me.MapFrom(p => p.UiSeriesId))
                .ForMember(i => i.Unk1, me => me.MapFrom(p => p.Unk1));

            CreateMap<BgmEntry, MusicMods.AdvancedMusicModModels.BgmConfig>()
                .ForMember(i => i.ToneId, me => me.MapFrom(p => p.ToneId))
                .ForMember(i => i.Filename, me => me.MapFrom(p => Path.GetFileName(p.Filename)))
                .ForMember(i => i.DbRoot, me => me.MapFrom(p => p.DbRoot))
                .ForMember(i => i.StreamSet, me => me.MapFrom(p => p.StreamSet))
                .ForMember(i => i.StreamingProperty, me => me.MapFrom(p => p.StreamingProperty))
                .ForMember(i => i.AssignedInfo, me => me.MapFrom(p => p.AssignedInfo))
                .ForMember(i => i.BgmProperties, me => me.MapFrom(p => p.BgmProperties))
                .ForMember(i => i.MSBTLabels, me => me.MapFrom(p => p.MSBTLabels))
                .ForMember(i => i.NUS3BankConfig, me => me.MapFrom(p => p.NUS3BankConfig));
            CreateMap<MusicMods.AdvancedMusicModModels.BgmConfig, BgmEntry>()
                .ForMember(i => i.ToneId, me => me.MapFrom(p => p.ToneId))
                .ForMember(i => i.Filename, me => me.MapFrom(p => p.Filename))
                .ForMember(i => i.DbRoot, me => me.MapFrom(p => p.DbRoot))
                .ForMember(i => i.StreamSet, me => me.MapFrom(p => p.StreamSet))
                .ForMember(i => i.StreamingProperty, me => me.MapFrom(p => p.StreamingProperty))
                .ForMember(i => i.AssignedInfo, me => me.MapFrom(p => p.AssignedInfo))
                .ForMember(i => i.BgmProperties, me => me.MapFrom(p => p.BgmProperties))
                .ForMember(i => i.MSBTLabels, me => me.MapFrom(p => p.MSBTLabels))
                .ForMember(i => i.NUS3BankConfig, me => me.MapFrom(p => p.NUS3BankConfig));

            CreateMap<BgmEntryModels.NUS3BankConfigEntry, MusicMods.AdvancedMusicModModels.NUS3BankConfig>()
                .ForMember(i => i.AudioVolume, me => me.MapFrom(p => p.AudioVolume));
            CreateMap<MusicMods.AdvancedMusicModModels.NUS3BankConfig, BgmEntryModels.NUS3BankConfigEntry>()
                .ForMember(i => i.Parent, me => me.Ignore())
                .ForMember(i => i.AudioVolume, me => me.MapFrom(p => p.AudioVolume));

            CreateMap<BgmEntryModels.BgmPropertyEntry, MusicMods.AdvancedMusicModModels.BgmPropertyEntryConfig>()
                .ForMember(i => i.LoopEndMs, me => me.MapFrom(p => p.LoopEndMs))
                .ForMember(i => i.LoopEndSample, me => me.MapFrom(p => p.LoopEndSample))
                .ForMember(i => i.LoopStartMs, me => me.MapFrom(p => p.LoopStartMs))
                .ForMember(i => i.LoopStartSample, me => me.MapFrom(p => p.LoopStartSample))
                .ForMember(i => i.NameId, me => me.MapFrom(p => p.NameId))
                .ForMember(i => i.TotalSamples, me => me.MapFrom(p => p.TotalSamples))
                .ForMember(i => i.TotalTimeMs, me => me.MapFrom(p => p.TotalTimeMs));
            CreateMap<MusicMods.AdvancedMusicModModels.BgmPropertyEntryConfig, BgmEntryModels.BgmPropertyEntry>()
                .ForMember(i => i.Parent, me => me.Ignore())
                .ForMember(i => i.LoopEndMs, me => me.MapFrom(p => p.LoopEndMs))
                .ForMember(i => i.LoopEndSample, me => me.MapFrom(p => p.LoopEndSample))
                .ForMember(i => i.LoopStartMs, me => me.MapFrom(p => p.LoopStartMs))
                .ForMember(i => i.LoopStartSample, me => me.MapFrom(p => p.LoopStartSample))
                .ForMember(i => i.NameId, me => me.Ignore())
                .ForMember(i => i.TotalSamples, me => me.MapFrom(p => p.TotalSamples))
                .ForMember(i => i.TotalTimeMs, me => me.MapFrom(p => p.TotalTimeMs))
                .ForMember(i => i.Frequency, me => me.Ignore());

            CreateMap<BgmEntryModels.MSBTLabelsEntry, MusicMods.AdvancedMusicModModels.MSBTLabelsConfig>()
                .ForMember(i => i.Author, me => me.MapFrom(p => p.Author))
                .ForMember(i => i.Copyright, me => me.MapFrom(p => p.Copyright))
                .ForMember(i => i.Title, me => me.MapFrom(p => p.Title));
            CreateMap<MusicMods.AdvancedMusicModModels.MSBTLabelsConfig, BgmEntryModels.MSBTLabelsEntry>()
                 .ForMember(i => i.Parent, me => me.Ignore())
                .ForMember(i => i.Author, me => me.MapFrom(p => p.Author))
                .ForMember(i => i.Copyright, me => me.MapFrom(p => p.Copyright))
                .ForMember(i => i.Title, me => me.MapFrom(p => p.Title))
                .ForMember(i => i.AuthorKey, me => me.Ignore())
                .ForMember(i => i.CopyrightKey, me => me.Ignore())
                .ForMember(i => i.TitleKey, me => me.Ignore());

            CreateMap<BgmEntryModels.BgmDbRootEntry, MusicMods.AdvancedMusicModModels.BgmDbRootConfig>()
                .ForMember(i => i.UiBgmId, me => me.MapFrom(p => p.UiBgmId))
                .ForMember(i => i.StreamSetId, me => me.MapFrom(p => p.StreamSetId))
                .ForMember(i => i.Rarity, me => me.MapFrom(p => p.Rarity))
                .ForMember(i => i.UiGameTitleId, me => me.MapFrom(p => p.UiGameTitleId))
                .ForMember(i => i.UiGameTitleId1, me => me.MapFrom(p => p.UiGameTitleId1))
                .ForMember(i => i.UiGameTitleId2, me => me.MapFrom(p => p.UiGameTitleId2))
                .ForMember(i => i.UiGameTitleId3, me => me.MapFrom(p => p.UiGameTitleId3))
                .ForMember(i => i.UiGameTitleId4, me => me.MapFrom(p => p.UiGameTitleId4))
                .ForMember(i => i.NameId, me => me.Ignore()) //Is never saved
                .ForMember(i => i.SaveNo, me => me.Ignore()) //Is never saved
                .ForMember(i => i.TestDispOrder, me => me.Ignore()) //Is never saved
                .ForMember(i => i.MenuValue, me => me.Ignore()) //Is never saved
                .ForMember(i => i.JpRegion, me => me.MapFrom(p => p.JpRegion))
                .ForMember(i => i.OtherRegion, me => me.MapFrom(p => p.OtherRegion))
                .ForMember(i => i.Possessed, me => me.MapFrom(p => p.Possessed))
                .ForMember(i => i.PrizeLottery, me => me.MapFrom(p => p.PrizeLottery))
                .ForMember(i => i.ShopPrice, me => me.MapFrom(p => p.ShopPrice))
                .ForMember(i => i.CountTarget, me => me.MapFrom(p => p.CountTarget))
                .ForMember(i => i.MenuLoop, me => me.MapFrom(p => p.MenuLoop))
                .ForMember(i => i.IsSelectableStageMake, me => me.MapFrom(p => p.IsSelectableStageMake))
                .ForMember(i => i.Unk1, me => me.MapFrom(p => p.Unk1))
                .ForMember(i => i.Unk2, me => me.MapFrom(p => p.Unk2))
                .ForMember(i => i.IsDlc, me => me.MapFrom(p => p.IsDlc))
                .ForMember(i => i.IsPatch, me => me.MapFrom(p => p.IsPatch))
                .ForMember(i => i.Unk3, me => me.MapFrom(p => p.Unk3))
                .ForMember(i => i.Unk4, me => me.MapFrom(p => p.Unk4))
                .ForMember(i => i.Unk5, me => me.MapFrom(p => p.Unk5));
            CreateMap<MusicMods.AdvancedMusicModModels.BgmDbRootConfig, BgmEntryModels.BgmDbRootEntry>()
                .ForMember(i => i.UiBgmId, me => me.Ignore())
                .ForMember(i => i.StreamSetId, me => me.Ignore())
                .ForMember(i => i.Rarity, me => me.MapFrom(p => p.Rarity))
                .ForMember(i => i.UiGameTitleId, me => me.Ignore())
                .ForMember(i => i.UiGameTitleId1, me => me.MapFrom(p => p.UiGameTitleId1))
                .ForMember(i => i.UiGameTitleId2, me => me.MapFrom(p => p.UiGameTitleId2))
                .ForMember(i => i.UiGameTitleId3, me => me.MapFrom(p => p.UiGameTitleId3))
                .ForMember(i => i.UiGameTitleId4, me => me.MapFrom(p => p.UiGameTitleId4))
                .ForMember(i => i.NameId, me => me.Ignore()) //Is never saved
                .ForMember(i => i.SaveNo, me => me.Ignore()) //Is never saved
                .ForMember(i => i.TestDispOrder, me => me.Ignore()) //Is never saved
                .ForMember(i => i.MenuValue, me => me.Ignore()) //Is never saved
                .ForMember(i => i.JpRegion, me => me.MapFrom(p => p.JpRegion))
                .ForMember(i => i.OtherRegion, me => me.MapFrom(p => p.OtherRegion))
                .ForMember(i => i.Possessed, me => me.MapFrom(p => p.Possessed))
                .ForMember(i => i.PrizeLottery, me => me.MapFrom(p => p.PrizeLottery))
                .ForMember(i => i.ShopPrice, me => me.MapFrom(p => p.ShopPrice))
                .ForMember(i => i.CountTarget, me => me.MapFrom(p => p.CountTarget))
                .ForMember(i => i.MenuLoop, me => me.MapFrom(p => p.MenuLoop))
                .ForMember(i => i.IsSelectableStageMake, me => me.MapFrom(p => p.IsSelectableStageMake))
                .ForMember(i => i.Unk1, me => me.MapFrom(p => p.Unk1))
                .ForMember(i => i.Unk2, me => me.MapFrom(p => p.Unk2))
                .ForMember(i => i.IsDlc, me => me.MapFrom(p => p.IsDlc))
                .ForMember(i => i.IsPatch, me => me.MapFrom(p => p.IsPatch))
                .ForMember(i => i.Unk3, me => me.MapFrom(p => p.Unk3))
                .ForMember(i => i.Unk4, me => me.MapFrom(p => p.Unk4))
                .ForMember(i => i.Unk5, me => me.MapFrom(p => p.Unk5));

            CreateMap<BgmEntryModels.BgmStreamSetEntry, MusicMods.AdvancedMusicModModels.BgmStreamSetConfig>()
                .ForMember(i => i.StreamSetId, me => me.MapFrom(p => p.StreamSetId))
                .ForMember(i => i.SpecialCategory, me => me.MapFrom(p => p.SpecialCategory))
                .ForMember(i => i.Info0, me => me.MapFrom(p => p.Info0))
                .ForMember(i => i.Info1, me => me.MapFrom(p => p.Info1))
                .ForMember(i => i.Info2, me => me.MapFrom(p => p.Info2))
                .ForMember(i => i.Info3, me => me.MapFrom(p => p.Info3))
                .ForMember(i => i.Info4, me => me.MapFrom(p => p.Info4))
                .ForMember(i => i.Info5, me => me.MapFrom(p => p.Info5))
                .ForMember(i => i.Info6, me => me.MapFrom(p => p.Info6))
                .ForMember(i => i.Info7, me => me.MapFrom(p => p.Info7))
                .ForMember(i => i.Info8, me => me.MapFrom(p => p.Info8))
                .ForMember(i => i.Info9, me => me.MapFrom(p => p.Info9))
                .ForMember(i => i.Info10, me => me.MapFrom(p => p.Info10))
                .ForMember(i => i.Info11, me => me.MapFrom(p => p.Info11))
                .ForMember(i => i.Info12, me => me.MapFrom(p => p.Info12))
                .ForMember(i => i.Info13, me => me.MapFrom(p => p.Info13))
                .ForMember(i => i.Info14, me => me.MapFrom(p => p.Info14))
                .ForMember(i => i.Info15, me => me.MapFrom(p => p.Info15));
            CreateMap<MusicMods.AdvancedMusicModModels.BgmStreamSetConfig, BgmEntryModels.BgmStreamSetEntry>()
                .ForMember(i => i.Parent, me => me.Ignore())
                .ForMember(i => i.StreamSetId, me => me.Ignore())
                .ForMember(i => i.SpecialCategory, me => me.MapFrom(p => p.SpecialCategory))
                .ForMember(i => i.Info0, me => me.Ignore())
                .ForMember(i => i.Info1, me => me.MapFrom(p => p.Info1))
                .ForMember(i => i.Info2, me => me.MapFrom(p => p.Info2))
                .ForMember(i => i.Info3, me => me.MapFrom(p => p.Info3))
                .ForMember(i => i.Info4, me => me.MapFrom(p => p.Info4))
                .ForMember(i => i.Info5, me => me.MapFrom(p => p.Info5))
                .ForMember(i => i.Info6, me => me.MapFrom(p => p.Info6))
                .ForMember(i => i.Info7, me => me.MapFrom(p => p.Info7))
                .ForMember(i => i.Info8, me => me.MapFrom(p => p.Info8))
                .ForMember(i => i.Info9, me => me.MapFrom(p => p.Info9))
                .ForMember(i => i.Info10, me => me.MapFrom(p => p.Info10))
                .ForMember(i => i.Info11, me => me.MapFrom(p => p.Info11))
                .ForMember(i => i.Info12, me => me.MapFrom(p => p.Info12))
                .ForMember(i => i.Info13, me => me.MapFrom(p => p.Info13))
                .ForMember(i => i.Info14, me => me.MapFrom(p => p.Info14))
                .ForMember(i => i.Info15, me => me.MapFrom(p => p.Info15));

            CreateMap<BgmEntryModels.BgmAssignedInfoEntry, MusicMods.AdvancedMusicModModels.BgmAssignedInfoConfig>()
                .ForMember(i => i.InfoId, me => me.MapFrom(p => p.InfoId))
                .ForMember(i => i.StreamId, me => me.MapFrom(p => p.StreamId))
                .ForMember(i => i.Condition, me => me.MapFrom(p => p.Condition))
                .ForMember(i => i.ConditionProcess, me => me.MapFrom(p => p.ConditionProcess))
                .ForMember(i => i.StartFrame, me => me.MapFrom(p => p.StartFrame))
                .ForMember(i => i.ChangeFadeInFrame, me => me.MapFrom(p => p.ChangeFadeInFrame))
                .ForMember(i => i.ChangeStartDelayFrame, me => me.MapFrom(p => p.ChangeStartDelayFrame))
                .ForMember(i => i.ChangeFadoutFrame, me => me.MapFrom(p => p.ChangeFadoutFrame))
                .ForMember(i => i.ChangeStopDelayFrame, me => me.MapFrom(p => p.ChangeStopDelayFrame))
                .ForMember(i => i.MenuChangeFadeInFrame, me => me.MapFrom(p => p.MenuChangeFadeInFrame))
                .ForMember(i => i.MenuChangeStartDelayFrame, me => me.MapFrom(p => p.MenuChangeStartDelayFrame))
                .ForMember(i => i.MenuChangeFadeOutFrame, me => me.MapFrom(p => p.MenuChangeFadeOutFrame))
                .ForMember(i => i.Unk1, me => me.MapFrom(p => p.Unk1));
            CreateMap<MusicMods.AdvancedMusicModModels.BgmAssignedInfoConfig, BgmEntryModels.BgmAssignedInfoEntry>()
                .ForMember(i => i.Parent, me => me.Ignore())
                .ForMember(i => i.InfoId, me => me.Ignore())
                .ForMember(i => i.StreamId, me => me.Ignore())
                .ForMember(i => i.Condition, me => me.MapFrom(p => p.Condition))
                .ForMember(i => i.ConditionProcess, me => me.MapFrom(p => p.ConditionProcess))
                .ForMember(i => i.StartFrame, me => me.MapFrom(p => p.StartFrame))
                .ForMember(i => i.ChangeFadeInFrame, me => me.MapFrom(p => p.ChangeFadeInFrame))
                .ForMember(i => i.ChangeStartDelayFrame, me => me.MapFrom(p => p.ChangeStartDelayFrame))
                .ForMember(i => i.ChangeFadoutFrame, me => me.MapFrom(p => p.ChangeFadoutFrame))
                .ForMember(i => i.ChangeStopDelayFrame, me => me.MapFrom(p => p.ChangeStopDelayFrame))
                .ForMember(i => i.MenuChangeFadeInFrame, me => me.MapFrom(p => p.MenuChangeFadeInFrame))
                .ForMember(i => i.MenuChangeStartDelayFrame, me => me.MapFrom(p => p.MenuChangeStartDelayFrame))
                .ForMember(i => i.MenuChangeFadeOutFrame, me => me.MapFrom(p => p.MenuChangeFadeOutFrame))
                .ForMember(i => i.Unk1, me => me.MapFrom(p => p.Unk1));

            CreateMap<BgmEntryModels.BgmStreamPropertyEntry, MusicMods.AdvancedMusicModModels.BgmStreamPropertyConfig>()
                .ForMember(i => i.StreamId, me => me.MapFrom(p => p.StreamId))
                .ForMember(i => i.DateName0, me => me.MapFrom(p => p.DateName0))
                .ForMember(i => i.DateName1, me => me.MapFrom(p => p.DateName1))
                .ForMember(i => i.DateName2, me => me.MapFrom(p => p.DateName2))
                .ForMember(i => i.DateName3, me => me.MapFrom(p => p.DateName3))
                .ForMember(i => i.DateName4, me => me.MapFrom(p => p.DateName4))
                .ForMember(i => i.Loop, me => me.MapFrom(p => p.Loop))
                .ForMember(i => i.EndPoint, me => me.MapFrom(p => p.EndPoint))
                .ForMember(i => i.FadeOutFrame, me => me.MapFrom(p => p.FadeOutFrame))
                .ForMember(i => i.StartPointSuddenDeath, me => me.MapFrom(p => p.StartPointSuddenDeath))
                .ForMember(i => i.StartPointTransition, me => me.MapFrom(p => p.StartPointTransition))
                .ForMember(i => i.StartPoint0, me => me.MapFrom(p => p.StartPoint0))
                .ForMember(i => i.StartPoint1, me => me.MapFrom(p => p.StartPoint1))
                .ForMember(i => i.StartPoint2, me => me.MapFrom(p => p.StartPoint2))
                .ForMember(i => i.StartPoint3, me => me.MapFrom(p => p.StartPoint3))
                .ForMember(i => i.StartPoint4, me => me.MapFrom(p => p.StartPoint4));
            CreateMap<MusicMods.AdvancedMusicModModels.BgmStreamPropertyConfig, BgmEntryModels.BgmStreamPropertyEntry>()
               .ForMember(i => i.Parent, me => me.Ignore())
               .ForMember(i => i.StreamId, me => me.Ignore())
               .ForMember(i => i.DateName0, me => me.Ignore())
               .ForMember(i => i.DateName1, me => me.MapFrom(p => p.DateName1))
               .ForMember(i => i.DateName2, me => me.MapFrom(p => p.DateName2))
               .ForMember(i => i.DateName3, me => me.MapFrom(p => p.DateName3))
               .ForMember(i => i.DateName4, me => me.MapFrom(p => p.DateName4))
               .ForMember(i => i.Loop, me => me.MapFrom(p => p.Loop))
               .ForMember(i => i.EndPoint, me => me.MapFrom(p => p.EndPoint))
               .ForMember(i => i.FadeOutFrame, me => me.MapFrom(p => p.FadeOutFrame))
               .ForMember(i => i.StartPointSuddenDeath, me => me.MapFrom(p => p.StartPointSuddenDeath))
               .ForMember(i => i.StartPointTransition, me => me.MapFrom(p => p.StartPointTransition))
               .ForMember(i => i.StartPoint0, me => me.MapFrom(p => p.StartPoint0))
               .ForMember(i => i.StartPoint1, me => me.MapFrom(p => p.StartPoint1))
               .ForMember(i => i.StartPoint2, me => me.MapFrom(p => p.StartPoint2))
               .ForMember(i => i.StartPoint3, me => me.MapFrom(p => p.StartPoint3))
               .ForMember(i => i.StartPoint4, me => me.MapFrom(p => p.StartPoint4));
        }
    }
}
