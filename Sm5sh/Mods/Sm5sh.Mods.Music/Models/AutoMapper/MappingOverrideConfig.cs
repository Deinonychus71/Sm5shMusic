using AutoMapper;

namespace Sm5sh.Mods.Music.Models.AutoMapper
{
    public class MappingOverrideConfig : Profile
    {
        public MappingOverrideConfig()
        {
            CreateMap<StageEntry, MusicOverride.MusicOverrideConfigModels.StageConfig>()
               .ForMember(i => i.UiStageId, me => me.MapFrom(p => p.UiStageId))
               .ForMember(i => i.NameId, me => me.MapFrom(p => p.NameId))
               .ForMember(i => i.SaveNo, me => me.MapFrom(p => p.SaveNo))
               .ForMember(i => i.UiSeriesId, me => me.MapFrom(p => p.UiSeriesId))
               .ForMember(i => i.CanSelect, me => me.MapFrom(p => p.CanSelect))
               .ForMember(i => i.DispOrder, me => me.MapFrom(p => p.DispOrder))
               .ForMember(i => i.StagePlaceId, me => me.MapFrom(p => p.StagePlaceId))
               .ForMember(i => i.SecretStagePlaceId, me => me.MapFrom(p => p.SecretStagePlaceId))
               .ForMember(i => i.CanDemo, me => me.MapFrom(p => p.CanDemo))
               .ForMember(i => i.Unk1, me => me.MapFrom(p => p.Unk1))
               .ForMember(i => i.Unk2, me => me.MapFrom(p => p.Unk2))
               .ForMember(i => i.Unk3, me => me.MapFrom(p => p.Unk3))
               .ForMember(i => i.SecretCommandId, me => me.MapFrom(p => p.SecretCommandId))
               .ForMember(i => i.SecretCommandIdJoycon, me => me.MapFrom(p => p.SecretCommandIdJoycon))
               .ForMember(i => i.BgmSetId, me => me.MapFrom(p => p.BgmSetId))
               .ForMember(i => i.BgmSettingNo, me => me.MapFrom(p => p.BgmSettingNo))
               .ForMember(i => i.Unk4, me => me.MapFrom(p => p.Unk4))
               .ForMember(i => i.IsDlc, me => me.MapFrom(p => p.IsDlc))
               .ForMember(i => i.IsPatch, me => me.MapFrom(p => p.IsPatch))
               .ForMember(i => i.DlcCharaId, me => me.MapFrom(p => p.DlcCharaId));
            CreateMap<MusicOverride.MusicOverrideConfigModels.StageConfig, StageEntry>()
                .ForMember(i => i.UiStageId, me => me.MapFrom(p => p.UiStageId))
                .ForMember(i => i.NameId, me => me.MapFrom(p => p.NameId))
                .ForMember(i => i.SaveNo, me => me.MapFrom(p => p.SaveNo))
                .ForMember(i => i.UiSeriesId, me => me.MapFrom(p => p.UiSeriesId))
                .ForMember(i => i.CanSelect, me => me.MapFrom(p => p.CanSelect))
                .ForMember(i => i.DispOrder, me => me.MapFrom(p => p.DispOrder))
                .ForMember(i => i.StagePlaceId, me => me.MapFrom(p => p.StagePlaceId))
                .ForMember(i => i.SecretStagePlaceId, me => me.MapFrom(p => p.SecretStagePlaceId))
                .ForMember(i => i.CanDemo, me => me.MapFrom(p => p.CanDemo))
                .ForMember(i => i.Unk1, me => me.MapFrom(p => p.Unk1))
                .ForMember(i => i.Unk2, me => me.MapFrom(p => p.Unk2))
                .ForMember(i => i.Unk3, me => me.MapFrom(p => p.Unk3))
                .ForMember(i => i.SecretCommandId, me => me.MapFrom(p => p.SecretCommandId))
                .ForMember(i => i.SecretCommandIdJoycon, me => me.MapFrom(p => p.SecretCommandIdJoycon))
                .ForMember(i => i.BgmSetId, me => me.MapFrom(p => p.BgmSetId))
                .ForMember(i => i.BgmSettingNo, me => me.MapFrom(p => p.BgmSettingNo))
                .ForMember(i => i.Unk4, me => me.MapFrom(p => p.Unk4))
                .ForMember(i => i.IsDlc, me => me.MapFrom(p => p.IsDlc))
                .ForMember(i => i.IsPatch, me => me.MapFrom(p => p.IsPatch))
                .ForMember(i => i.DlcCharaId, me => me.MapFrom(p => p.DlcCharaId));
           

            CreateMap<PlaylistEntry, MusicOverride.MusicOverrideConfigModels.PlaylistConfig>()
                .ForMember(i => i.Id, me => me.MapFrom(p => p.Id))
                .ForMember(i => i.Title, me => me.MapFrom(p => p.Title))
                .ForMember(i => i.Tracks, me => me.MapFrom(p => p.Tracks));
            CreateMap<MusicOverride.MusicOverrideConfigModels.PlaylistConfig, PlaylistEntry>()
                .ForMember(i => i.Id, me => me.MapFrom(p => p.Id))
                .ForMember(i => i.Title, me => me.MapFrom(p => p.Title))
                .ForMember(i => i.Tracks, me => me.MapFrom(p => p.Tracks));

            CreateMap<PlaylistEntryModels.PlaylistValueEntry, MusicOverride.MusicOverrideConfigModels.PlaylistValueConfig>()
                .ForMember(i => i.UiBgmId, me => me.MapFrom(p => p.UiBgmId))
                .ForMember(i => i.Incidence0, me => me.MapFrom(p => p.Incidence0))
                .ForMember(i => i.Incidence1, me => me.MapFrom(p => p.Incidence1))
                .ForMember(i => i.Incidence2, me => me.MapFrom(p => p.Incidence2))
                .ForMember(i => i.Incidence3, me => me.MapFrom(p => p.Incidence3))
                .ForMember(i => i.Incidence4, me => me.MapFrom(p => p.Incidence4))
                .ForMember(i => i.Incidence5, me => me.MapFrom(p => p.Incidence5))
                .ForMember(i => i.Incidence6, me => me.MapFrom(p => p.Incidence6))
                .ForMember(i => i.Incidence7, me => me.MapFrom(p => p.Incidence7))
                .ForMember(i => i.Incidence8, me => me.MapFrom(p => p.Incidence8))
                .ForMember(i => i.Incidence9, me => me.MapFrom(p => p.Incidence9))
                .ForMember(i => i.Incidence10, me => me.MapFrom(p => p.Incidence10))
                .ForMember(i => i.Incidence11, me => me.MapFrom(p => p.Incidence11))
                .ForMember(i => i.Incidence12, me => me.MapFrom(p => p.Incidence12))
                .ForMember(i => i.Incidence13, me => me.MapFrom(p => p.Incidence13))
                .ForMember(i => i.Incidence14, me => me.MapFrom(p => p.Incidence14))
                .ForMember(i => i.Incidence15, me => me.MapFrom(p => p.Incidence15))
                .ForMember(i => i.Order0, me => me.MapFrom(p => p.Order0))
                .ForMember(i => i.Order1, me => me.MapFrom(p => p.Order1))
                .ForMember(i => i.Order2, me => me.MapFrom(p => p.Order2))
                .ForMember(i => i.Order3, me => me.MapFrom(p => p.Order3))
                .ForMember(i => i.Order4, me => me.MapFrom(p => p.Order4))
                .ForMember(i => i.Order5, me => me.MapFrom(p => p.Order5))
                .ForMember(i => i.Order6, me => me.MapFrom(p => p.Order6))
                .ForMember(i => i.Order7, me => me.MapFrom(p => p.Order7))
                .ForMember(i => i.Order8, me => me.MapFrom(p => p.Order8))
                .ForMember(i => i.Order9, me => me.MapFrom(p => p.Order9))
                .ForMember(i => i.Order10, me => me.MapFrom(p => p.Order10))
                .ForMember(i => i.Order11, me => me.MapFrom(p => p.Order11))
                .ForMember(i => i.Order12, me => me.MapFrom(p => p.Order12))
                .ForMember(i => i.Order13, me => me.MapFrom(p => p.Order13))
                .ForMember(i => i.Order14, me => me.MapFrom(p => p.Order14))
                .ForMember(i => i.Order15, me => me.MapFrom(p => p.Order15));
            CreateMap<MusicOverride.MusicOverrideConfigModels.PlaylistValueConfig, PlaylistEntryModels.PlaylistValueEntry>()
                .ForMember(i => i.UiBgmId, me => me.MapFrom(p => p.UiBgmId))
                .ForMember(i => i.Incidence0, me => me.MapFrom(p => p.Incidence0))
                .ForMember(i => i.Incidence1, me => me.MapFrom(p => p.Incidence1))
                .ForMember(i => i.Incidence2, me => me.MapFrom(p => p.Incidence2))
                .ForMember(i => i.Incidence3, me => me.MapFrom(p => p.Incidence3))
                .ForMember(i => i.Incidence4, me => me.MapFrom(p => p.Incidence4))
                .ForMember(i => i.Incidence5, me => me.MapFrom(p => p.Incidence5))
                .ForMember(i => i.Incidence6, me => me.MapFrom(p => p.Incidence6))
                .ForMember(i => i.Incidence7, me => me.MapFrom(p => p.Incidence7))
                .ForMember(i => i.Incidence8, me => me.MapFrom(p => p.Incidence8))
                .ForMember(i => i.Incidence9, me => me.MapFrom(p => p.Incidence9))
                .ForMember(i => i.Incidence10, me => me.MapFrom(p => p.Incidence10))
                .ForMember(i => i.Incidence11, me => me.MapFrom(p => p.Incidence11))
                .ForMember(i => i.Incidence12, me => me.MapFrom(p => p.Incidence12))
                .ForMember(i => i.Incidence13, me => me.MapFrom(p => p.Incidence13))
                .ForMember(i => i.Incidence14, me => me.MapFrom(p => p.Incidence14))
                .ForMember(i => i.Incidence15, me => me.MapFrom(p => p.Incidence15))
                .ForMember(i => i.Order0, me => me.MapFrom(p => p.Order0))
                .ForMember(i => i.Order1, me => me.MapFrom(p => p.Order1))
                .ForMember(i => i.Order2, me => me.MapFrom(p => p.Order2))
                .ForMember(i => i.Order3, me => me.MapFrom(p => p.Order3))
                .ForMember(i => i.Order4, me => me.MapFrom(p => p.Order4))
                .ForMember(i => i.Order5, me => me.MapFrom(p => p.Order5))
                .ForMember(i => i.Order6, me => me.MapFrom(p => p.Order6))
                .ForMember(i => i.Order7, me => me.MapFrom(p => p.Order7))
                .ForMember(i => i.Order8, me => me.MapFrom(p => p.Order8))
                .ForMember(i => i.Order9, me => me.MapFrom(p => p.Order9))
                .ForMember(i => i.Order10, me => me.MapFrom(p => p.Order10))
                .ForMember(i => i.Order11, me => me.MapFrom(p => p.Order11))
                .ForMember(i => i.Order12, me => me.MapFrom(p => p.Order12))
                .ForMember(i => i.Order13, me => me.MapFrom(p => p.Order13))
                .ForMember(i => i.Order14, me => me.MapFrom(p => p.Order14))
                .ForMember(i => i.Order15, me => me.MapFrom(p => p.Order15));
        }
    }
}
